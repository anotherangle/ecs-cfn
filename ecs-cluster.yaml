Description: >

    This template deploys a VPC, with a pair of public and private subnets spread
    across two Availabilty Zones. It deploys an Internet Gateway, with a default
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
    and default routes for them in the private subnets.

    It then deploys a highly available ECS cluster using an AutoScaling Group, with
    ECS hosts distributed across multiple Availability Zones.

    Finally, it deploys jenkins on  ECS services from containers published in
    Amazon EC2 Container Registry (Amazon ECR).

    Author: Sandeep Mahto <sandeep.mahto@opstree.com>

Parameters:
    KeyName:
        Description: Amazon EC2 Key Pair | Make sure it already exists
        Type: "AWS::EC2::KeyPair::KeyName"

    ECSInstanceType:
        Description: Which instance type should we use to build the ECS cluster?
        Type: String
        Default: t2.nano

    ECSClusterSize:
        Description: How many ECS hosts do you want to initially deploy?
        Type: Number
        Default: 1

    TemplateBucket:
        Type: String
        Description: Name of the bucket where the id_rsa key is located in an encrypted form
        Default: ot-cfn-template

Resources:

    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucket}/infrastructure/vpc.yaml
            Parameters:
                EnvironmentName:    !Ref AWS::StackName
                VpcCIDR:            10.10.0.0/16
                PublicSubnet1CIDR:  10.10.8.0/21
                PublicSubnet2CIDR:  10.10.16.0/21
                PrivateSubnet1CIDR: 10.10.24.0/21
                PrivateSubnet2CIDR: 10.10.32.0/21

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucket}/infrastructure/security-groups.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucket}/infrastructure/load-balancers.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !GetAtt VPC.Outputs.VPC
                Subnets: !GetAtt VPC.Outputs.PublicSubnets
                SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

    ECS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !Sub https://s3.amazonaws.com/${TemplateBucket}/infrastructure/ecs-cluster.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                InstanceType: !Ref ECSInstanceType
                ClusterSize: !Ref ECSClusterSize
                VPC: !GetAtt VPC.Outputs.VPC
                SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
                Subnets: !GetAtt VPC.Outputs.PrivateSubnets
                KeyName: !Ref KeyName

Outputs:
    WebsiteServiceUrl:
        Description: ALB ID
        Value: !GetAtt ALB.Outputs.Listener
